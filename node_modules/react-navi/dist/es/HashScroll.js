import * as React from 'react';
export var HashScrollContext = React.createContext('auto');
export function HashScroll(props) {
    if (!props.behavior) {
        return React.createElement(React.Fragment, null, props.children);
    }
    return (React.createElement(HashScrollContext.Provider, { value: props.behavior }, props.children));
}
function scroll(left, top, behavior) {
    if (behavior === 'auto') {
        window.scroll(left, top);
    }
    else {
        try {
            window.scroll({
                top: top,
                left: left,
                behavior: behavior,
            });
        }
        catch (e) {
            window.scroll(left, top);
        }
    }
}
export function scrollToHash(hash, behavior) {
    if (behavior === void 0) { behavior = 'auto'; }
    if (hash) {
        var id = document.getElementById(hash.slice(1));
        if (id) {
            var _a = id.getBoundingClientRect(), top_1 = _a.top, left = _a.left;
            scroll(left + window.pageXOffset, top_1 + window.pageYOffset, behavior);
            // Focus the element, as default behavior is cancelled.
            // https://css-tricks.com/snippets/jquery/smooth-scrolling/
            id.focus();
        }
    }
    else {
        scroll(0, 0, behavior);
    }
}
//# sourceMappingURL=HashScroll.js.map