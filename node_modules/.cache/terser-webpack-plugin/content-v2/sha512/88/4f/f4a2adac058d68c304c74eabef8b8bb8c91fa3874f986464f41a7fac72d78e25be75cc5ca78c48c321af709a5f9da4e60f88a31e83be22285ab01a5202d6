{"map":"{\"version\":3,\"sources\":[\"/Users/nbauer/git/react-blog/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-0!/Users/nbauer/git/react-blog/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!/Users/nbauer/git/react-blog/node_modules/postcss-loader/src/index.js??postcss!/Users/nbauer/git/react-blog/src/components/BlogPostLayout.module.css\",\"/Users/nbauer/git/react-blog/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-0!/Users/nbauer/git/react-blog/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!/Users/nbauer/git/react-blog/node_modules/postcss-loader/src/index.js??postcss!/Users/nbauer/git/react-blog/src/components/Pagination.module.css\",\"/Users/nbauer/git/react-blog/src/utils/formats.js\",\"/Users/nbauer/git/react-blog/src/components/ArticleMeta.js\",\"/Users/nbauer/git/react-blog/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-0!/Users/nbauer/git/react-blog/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!/Users/nbauer/git/react-blog/node_modules/postcss-loader/src/index.js??postcss!/Users/nbauer/git/react-blog/src/components/ArticleMeta.module.css\",\"/Users/nbauer/git/react-blog/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-0!/Users/nbauer/git/react-blog/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!/Users/nbauer/git/react-blog/node_modules/postcss-loader/src/index.js??postcss!/Users/nbauer/git/react-blog/src/components/BlogIndexPage.module.css\",\"/Users/nbauer/git/react-blog/src/siteMetadata.js\",\"/Users/nbauer/git/react-blog/src/components/Bio.js\",\"/Users/nbauer/git/react-blog/src/utils/getGravatarURL.js\",\"/Users/nbauer/git/react-blog/src/components/Pagination.js\",\"/Users/nbauer/git/react-blog/src/components/BlogIndexPage.js\",\"/Users/nbauer/git/react-blog/src/components/NotFoundPage.js\",\"/Users/nbauer/git/react-blog/src/components/LoadingIndicator.js\",\"/Users/nbauer/git/react-blog/src/components/BlogLayout.js\",\"/Users/nbauer/git/react-blog/src/components/BlogPostLayout.js\",\"/Users/nbauer/git/react-blog/src/routes/posts/index.js\",\"/Users/nbauer/git/react-blog/src/routes/index.js\",\"/Users/nbauer/git/react-blog/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-0!/Users/nbauer/git/react-blog/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!/Users/nbauer/git/react-blog/node_modules/postcss-loader/src/index.js??postcss!/Users/nbauer/git/react-blog/src/components/LoadingIndicator.module.css\",\"/Users/nbauer/git/react-blog/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-0!/Users/nbauer/git/react-blog/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!/Users/nbauer/git/react-blog/node_modules/postcss-loader/src/index.js??postcss!/Users/nbauer/git/react-blog/src/components/BlogLayout.module.css\",\"/Users/nbauer/git/react-blog/src/components/ArticleSummary.js\",\"/Users/nbauer/git/react-blog/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-0!/Users/nbauer/git/react-blog/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!/Users/nbauer/git/react-blog/node_modules/postcss-loader/src/index.js??postcss!/Users/nbauer/git/react-blog/src/components/ArticleSummary.module.css\",\"/Users/nbauer/git/react-blog/node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-5-0!/Users/nbauer/git/react-blog/node_modules/css-loader/dist/cjs.js??ref--6-oneOf-5-1!/Users/nbauer/git/react-blog/node_modules/postcss-loader/src/index.js??postcss!/Users/nbauer/git/react-blog/src/components/Bio.module.css\",\"/Users/nbauer/git/react-blog/src/serviceWorker.js\",\"/Users/nbauer/git/react-blog/src/index.js\"],\"names\":[\"module\",\"exports\",\"title\",\"header\",\"footer\",\"bio\",\"links\",\"next\",\"content\",\"Pagination\",\"previous\",\"months\",\"ArticleMeta\",\"blogRoot\",\"meta\",\"readingTime\",\"readingTimeElement\",\"minutes\",\"Math\",\"max\",\"round\",\"cups\",\"react_default\",\"a\",\"createElement\",\"Fragment\",\"className\",\"styles\",\"Array\",\"fill\",\"join\",\"dateTime\",\"date\",\"toUTCString\",\"dateString\",\"Date\",\"monthName\",\"getMonth\",\"dayOfMonth\",\"getDate\",\"fourDigitYear\",\"getFullYear\",\"concat\",\"formatDate\",\"tags\",\"length\",\"map\",\"tag\",\"key\",\"es\",\"href\",\"articlesList\",\"siteMetadata\",\"author\",\"description\",\"indexPageSize\",\"Bio\",\"props\",\"photoURL\",\"email\",\"size\",\"defaultURL\",\"hash\",\"md5\",\"toLowerCase\",\"trim\",\"encodeURIComponent\",\"getGravatarURL\",\"src\",\"alt\",\"pageCount\",\"pageNumber\",\"dist_es\",\"String\",\"pages\",\"current\",\"count\",\"BlogIndexPage\",\"postRoutes\",\"components_Bio\",\"route\",\"url\",\"ArticleSummary\",\"components_Pagination\",\"target\",\"style\",\"float\",\"NotFoundPage\",\"NotFound\",\"LoadingIndicator\",\"active\",\"BlogLayout\",\"isViewingIndex\",\"loadingRoute\",\"useLoadingRoute\",\"container\",\"components_LoadingIndicator\",\"render\",\"components_NotFoundPage\",\"BlogPostLayout\",\"_useCurrentRoute\",\"useCurrentRoute\",\"data\",\"_useView\",\"useView\",\"connect\",\"head\",\"MDXComponent\",\"pathname\",\"esm\",\"components\",\"Link\",\"wrapper\",\"children\",\"previousDetails\",\"nextDetails\",\"postModules\",\"./2019-01-05-welcome/post.js\",\"__webpack_require__\",\"e\",\"then\",\"bind\",\"importPost\",\"postPathnames\",\"Object\",\"keys\",\"datePattern\",\"postDetails\",\"slug\",\"slugify\",\"replace\",\"dateMatch\",\"match\",\"parseInt\",\"posts\",\"sortBy\",\"reverse\",\"i\",\"getPage\",\"Navi\",\"asyncToGenerator\",\"regenerator_default\",\"mark\",\"_callee2\",\"_yield$importPost\",\"post\",\"getContent\",\"previousSlug\",\"previousPost\",\"nextSlug\",\"nextPost\",\"previousPostDetails\",\"nextPostDetails\",\"wrap\",\"_context2\",\"prev\",\"sent\",\"default\",\"objectWithoutProperties\",\"abrupt\",\"getData\",\"req\",\"context\",\"objectSpread2\",\"getView\",\"_getView\",\"_callee\",\"_yield$getContent\",\"other\",\"_context\",\"stop\",\"apply\",\"this\",\"arguments\",\"chunks\",\"chunk\",\"chunkPagePairs\",\"_ref\",\"pageTitle\",\"method\",\"Promise\",\"all\",\"_ref2\",\"resolve\",\"routes\",\"_x3\",\"view\",\"components_BlogIndexPage\",\"_x\",\"_x2\",\"compose\",\"withContext\",\"mountpath\",\"withView\",\"path\",\"test\",\"components_BlogLayout\",\"mount\",\"/\",\"shift\",\"/page\",\"/1\",\"redirect\",\"fromPairs\",\"/posts\",\"components_BlogPostLayout\",\"/tags\",\"lazy\",\"/about\",\"/rss\",\"LoadingIndicator-animation\",\"react__WEBPACK_IMPORTED_MODULE_0__\",\"react__WEBPACK_IMPORTED_MODULE_0___default\",\"n\",\"react_navi__WEBPACK_IMPORTED_MODULE_1__\",\"_ArticleMeta__WEBPACK_IMPORTED_MODULE_2__\",\"_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3__\",\"_ArticleSummary_module_css__WEBPACK_IMPORTED_MODULE_3___default\",\"spoiler\",\"Boolean\",\"window\",\"location\",\"hostname\",\"register\",\"main\",\"navigation\",\"createBrowserNavigation\",\"getRoute\",\"process\",\"renderer\",\"ReactDOM\",\"hydrate\",\"react_navi_helmet_async_dist_es\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"title\\\":\\\"BlogPostLayout_title__2L_2_\\\",\\\"header\\\":\\\"BlogPostLayout_header__1Ny4T\\\",\\\"footer\\\":\\\"BlogPostLayout_footer__3ofxa\\\",\\\"bio\\\":\\\"BlogPostLayout_bio__diNn9\\\",\\\"links\\\":\\\"BlogPostLayout_links__-LX2X\\\",\\\"next\\\":\\\"BlogPostLayout_next__KrMHx\\\",\\\"content\\\":\\\"BlogPostLayout_content__1mzTO\\\"};\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"Pagination\\\":\\\"Pagination_Pagination__2Xt2h\\\",\\\"previous\\\":\\\"Pagination_previous__1akUm\\\",\\\"next\\\":\\\"Pagination_next__7Ba4Y\\\"};\",\"export let months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\\n\\nexport function formatDate(dateString) {\\n  let date = new Date(dateString)\\n  let monthName = months[date.getMonth()]\\n  let dayOfMonth = date.getDate()\\n  let fourDigitYear = date.getFullYear()\\n\\n  return `${monthName} ${dayOfMonth}, ${fourDigitYear}`\\n}\",\"import { join } from 'path'\\nimport React from 'react'\\nimport { Link } from 'react-navi'\\nimport { formatDate } from '../utils/formats'\\nimport styles from './ArticleMeta.module.css'\\n\\nfunction ArticleMeta({ blogRoot, meta, readingTime }) {\\n  let readingTimeElement\\n  if (readingTime) {\\n    let minutes = Math.max(Math.round(readingTime.minutes), 1)\\n    let cups = Math.round(minutes / 5);\\n    readingTimeElement =\\n      <React.Fragment>\\n        {' '}&bull;{' '}\\n        <span className={styles.readingTime}>\\n          {new Array(cups || 1).fill('☕️').join('')} {minutes} min read\\n        </span>\\n      </React.Fragment>\\n  }\\n      \\n  return (\\n    <small className={styles.ArticleMeta}>\\n      <time dateTime={meta.date.toUTCString()}>{formatDate(meta.date)}</time>\\n      {\\n        meta.tags &&\\n        meta.tags.length &&\\n        <>\\n          {' '}&bull;{' '}\\n          <ul className={styles.tags}>\\n            {meta.tags.map(tag =>\\n              <li key={tag}>\\n                <Link href={join(blogRoot, 'tags', tag)}>{tag}</Link>\\n              </li>\\n            )}\\n          </ul>\\n        </>\\n      }\\n      {readingTimeElement || null}\\n    </small>\\n  )\\n}\\n\\nexport default ArticleMeta\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"tags\\\":\\\"ArticleMeta_tags__1IJ9w\\\"};\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"title\\\":\\\"BlogIndexPage_title__341hM\\\",\\\"articlesList\\\":\\\"BlogIndexPage_articlesList__1V39R\\\",\\\"footer\\\":\\\"BlogIndexPage_footer__1vkZQ\\\"};\",\"export default {\\n  // The blog's title as it appears in the layout header, and in the document\\n  // <title> tag.\\n  title: \\\"npx create-react-blog\\\",\\n\\n  author: \\\"James K Nelson\\\",\\n  description: \\\"A clone of Dan Abramov's overreacted.io using create-react-app-mdx and Navi\\\",\\n\\n  // The number of posts to a page on the site index.\\n  indexPageSize: 10,\\n}\\n\",\"import React from 'react'\\nimport styles from './Bio.module.css'\\nimport { getGravatarURL } from '../utils/getGravatarURL'\\n\\nfunction Bio(props) {\\n  let photoURL = getGravatarURL({\\n    email: \\\"test1@example.com\\\",\\n    size: 56,\\n  })\\n\\n  return (\\n    <div className={`\\n      ${styles.Bio}\\n      ${props.className || ''}\\n    `}>\\n      <img src={photoURL} alt=\\\"Me\\\" />\\n      <p>\\n        Create a blog with a single command, by{' '}\\n        <a href=\\\"https://twitter.com/james_k_nelson/\\\">James K Nelson</a>.\\n        <br />\\n        Themed after Gatsby's blog starter and Dan Abramov's{' '}\\n        <a href=\\\"https://overreacted.io/\\\">overreacted.io</a>.<br />\\n        Based on{' '}\\n        <a href=\\\"https://facebook.github.io/create-react-app/\\\">\\n          create-react-app\\n        </a>\\n        , <a href=\\\"https://mdxjs.com/\\\">MDX</a>, and{' '}\\n        <a href=\\\"https://frontarm.com/navi/\\\">Navi</a>.\\n      </p>\\n    </div>\\n  )\\n}\\n\\nexport default Bio\\n\",\"import md5 from 'blueimp-md5'\\n\\nexport function getGravatarURL({ email, size, defaultURL = 'identicon' }) {\\n  let hash = md5(email.toLowerCase().trim())\\n  return `https://www.gravatar.com/avatar/${hash}.jpg?s=${size}&d=${encodeURIComponent(defaultURL)}`\\n}\\n\",\"import { join } from 'path'\\nimport React from 'react'\\nimport { Link } from 'react-navi'\\nimport styles from './Pagination.module.css'\\n\\nfunction Pagination({ blogRoot, pageCount, pageNumber }) {\\n  return (\\n    <small className={styles.Pagination}>\\n      {\\n        pageNumber !== 1 &&\\n        <Link\\n          className={styles.previous}\\n          href={join(blogRoot, 'page', String(pageNumber - 1))}>\\n          ← Previous\\n        </Link>\\n      }\\n      <span className={styles.pages}>\\n        {' '}Page <span className={styles.current}>{pageNumber}</span>/<span className={styles.count}>{pageCount}</span>{' '}\\n      </span>\\n      {\\n        pageNumber < pageCount &&\\n        <Link\\n          className={styles.next}\\n          href={join(blogRoot, 'page', String(pageNumber + 1))}>\\n          Next →\\n        </Link>\\n      }\\n    </small>\\n  )\\n}\\n\\nexport default Pagination\",\"import React from 'react'\\nimport { Link } from 'react-navi'\\nimport siteMetadata from '../siteMetadata'\\nimport ArticleSummary from './ArticleSummary'\\nimport Bio from './Bio'\\nimport Pagination from './Pagination'\\nimport styles from './BlogIndexPage.module.css'\\n\\nfunction BlogIndexPage({ blogRoot, pageCount, pageNumber, postRoutes }) {\\n  return (\\n    <div>\\n      <header>\\n        <h1 className={styles.title}>\\n          <Link href={blogRoot}>{siteMetadata.title}</Link>\\n        </h1>\\n        <Bio />\\n      </header>\\n      <ul className={styles.articlesList}>\\n        {postRoutes.map(route => (\\n          <li key={route.url.href}>\\n            <ArticleSummary blogRoot={blogRoot} route={route} />\\n          </li>\\n        ))}\\n      </ul>\\n      {pageCount > 1 && (\\n        <Pagination\\n          blogRoot={blogRoot}\\n          pageCount={pageCount}\\n          pageNumber={pageNumber}\\n        />\\n      )}\\n      <footer className={styles.footer}>\\n        <div>\\n          <a href=\\\"/rss.xml\\\" target=\\\"_blank\\\" style={{ float: 'right' }}>\\n            RSS\\n          </a>\\n          <Link href=\\\"/about\\\">About</Link> &bull; <Link href=\\\"/tags\\\">Tags</Link>{' '}\\n          &bull;{' '}\\n          <a href=\\\"https://github.com/frontarm/create-react-blog\\\">Source</a>\\n        </div>\\n      </footer>\\n    </div>\\n  )\\n}\\n\\nexport default BlogIndexPage\\n\",\"import React from 'react'\\nimport styles from './NotFoundPage.module.css'\\n\\n// Note that create-react-navi-app will always show an error screen when this\\n// is rendered. This is because the underlying react-scripts package shows\\n// the error screen when a NotFoundError is thrown, even though it's caught\\n// by <NotFoundBoundary>. To see the error rendered by this function,\\n// you'll just need to close the error overlay with the \\\"x\\\" at the top right.\\nfunction NotFoundPage() {\\n  return (\\n    <div className={styles.NotFound}>\\n      <h1>404 - Not Found</h1>\\n    </div>\\n  )\\n}\\n\\nexport default NotFoundPage\",\"import React from 'react'\\nimport styles from './LoadingIndicator.module.css'\\n\\nfunction LoadingIndicator({ active, className, style }) {\\n  return (\\n    <div\\n      className={`\\n        ${styles.LoadingIndicator}\\n        ${active ? styles.active : ''}\\n        ${className}\\n      `}\\n      style={style}\\n    />\\n  )\\n}\\n\\nexport default LoadingIndicator\",\"import React from 'react'\\nimport {\\n  View,\\n  Link,\\n  NotFoundBoundary,\\n  useLoadingRoute,\\n} from 'react-navi'\\nimport siteMetadata from '../siteMetadata'\\nimport NotFoundPage from './NotFoundPage'\\nimport LoadingIndicator from './LoadingIndicator'\\nimport styles from './BlogLayout.module.css'\\n\\nfunction BlogLayout({ blogRoot, isViewingIndex }) {\\n  let loadingRoute = useLoadingRoute()\\n\\n  return (\\n    <div className={styles.container}>\\n      <LoadingIndicator active={!!loadingRoute} />\\n\\n      {// Don't show the header on index pages, as it has a special header.\\n      !isViewingIndex && (\\n        <header>\\n          <h3 className={styles.title}>\\n            <Link href={blogRoot}>{siteMetadata.title}</Link>\\n          </h3>\\n        </header>\\n      )}\\n\\n      <main>\\n        <NotFoundBoundary render={() => <NotFoundPage />}>\\n          <View />\\n        </NotFoundBoundary>\\n      </main>\\n    </div>\\n  )\\n}\\n\\nexport default BlogLayout\\n\",\"import React from 'react'\\nimport { Link, useCurrentRoute, useView } from 'react-navi'\\nimport { MDXProvider } from '@mdx-js/react'\\nimport siteMetadata from '../siteMetadata'\\nimport ArticleMeta from './ArticleMeta'\\nimport Bio from './Bio'\\nimport styles from './BlogPostLayout.module.css'\\n\\nfunction BlogPostLayout({ blogRoot }) {\\n  let { title, data, url } = useCurrentRoute()\\n  let { connect, content, head } = useView()\\n  let { MDXComponent, readingTime } = content\\n\\n  // The content for posts is an MDX component, so we'll need\\n  // to use <MDXProvider> to ensure that links are rendered\\n  // with <Link>, and thus use pushState.\\n  return connect(\\n    <>\\n      {head}\\n      <article className={styles.container}>\\n        <header className={styles.header}>\\n          <h1 className={styles.title}>\\n            <Link href={url.pathname}>{title}</Link>\\n          </h1>\\n          <ArticleMeta\\n            blogRoot={blogRoot}\\n            meta={data}\\n            readingTime={readingTime}\\n          />\\n        </header>\\n        <MDXProvider components={{\\n          a: Link,\\n          wrapper: ({ children }) =>\\n            <div className={styles.content}>\\n              {children}\\n            </div>\\n        }}>\\n          <MDXComponent />\\n        </MDXProvider>\\n        <footer className={styles.footer}>\\n          <h3 className={styles.title}>\\n            <Link href={blogRoot}>\\n              {siteMetadata.title}\\n            </Link>\\n          </h3>\\n          <Bio className={styles.bio} />\\n          <section className={styles.links}>\\n            {\\n              data.previousDetails &&\\n              <Link className={styles.previous} href={data.previousDetails.href}>\\n                ← {data.previousDetails.title}\\n              </Link>\\n            }\\n            {\\n              data.nextDetails &&\\n              <Link className={styles.next} href={data.nextDetails.href}>\\n                {data.nextDetails.title} →\\n              </Link>\\n            }\\n          </section>\\n        </footer>\\n      </article>\\n    </>\\n  )\\n}\\n\\nexport default BlogPostLayout\",\"import importAll from 'import-all.macro'\\nimport * as Navi from 'navi'\\nimport { join } from 'path'\\nimport { sortBy } from 'lodash'\\nimport slugify from 'slugify'\\n\\n// Get a list of all posts, that will not be loaded until the user\\n// requests them.\\nconst postModules = importAll.deferred('./**/post.js')\\nconst importPost = pathname => postModules[pathname]()\\nconst postPathnames = Object.keys(postModules)\\nconst datePattern = /^((\\\\d{1,4})-(\\\\d{1,4})-(\\\\d{1,4}))[/-]/\\n\\nlet postDetails = postPathnames.map(pathname => {\\n  let slug = slugify(\\n    pathname.replace(/post.jsx?$/, '').replace(/(\\\\d)\\\\/(\\\\d)/, '$1-$2'),\\n  )\\n    .replace(/^[-.]+|[.-]+$/g, '')\\n    .replace(datePattern, '$1/')\\n\\n  let date\\n  let dateMatch = slug.match(datePattern)\\n  if (dateMatch) {\\n    date = new Date(dateMatch[2], parseInt(dateMatch[3]) - 1, dateMatch[4])\\n  }\\n\\n  return {\\n    slug,\\n    pathname,\\n    date,\\n  }\\n})\\n\\n// Sort the pages by slug (which contain the dates)\\npostDetails = sortBy(postDetails, ['slug']).reverse()\\n\\n// Create url-friendly slugs from post pathnames, and a `getPage()` function\\n// that can be used to load and return the post's Page object.\\nlet posts = postDetails.map(({ slug, pathname, date }, i) => ({\\n  getPage: Navi.map(async () => {\\n    let { default: post } = await importPost(pathname)\\n    let { title, getContent, ...meta } = post\\n    let previousSlug, previousPost, nextSlug, nextPost\\n\\n    if (i !== 0) {\\n      let previousPostDetails = postDetails[i - 1]\\n      previousPost = (await importPost(previousPostDetails.pathname)).default\\n      previousSlug = previousPostDetails.slug\\n    }\\n\\n    if (i + 1 < postDetails.length) {\\n      let nextPostDetails = postDetails[i + 1]\\n      nextPost = (await importPost(nextPostDetails.pathname)).default\\n      nextSlug = nextPostDetails.slug\\n    }\\n\\n    return Navi.route({\\n      title,\\n      getData: (req, context) => ({\\n        date,\\n        pathname,\\n        slug,\\n        previousDetails: previousPost && {\\n          title: previousPost.title,\\n          href: join(context.blogRoot, 'posts', previousSlug),\\n        },\\n        nextDetails: nextPost && {\\n          title: nextPost.title,\\n          href: join(context.blogRoot, 'posts', nextSlug),\\n        },\\n        ...meta,\\n      }),\\n      getView: async () => {\\n        let { default: MDXComponent, ...other } = await getContent()\\n        return { MDXComponent, ...other }\\n      },\\n    })\\n  }),\\n  slug,\\n}))\\n\\nexport default posts\\n\",\"import {\\n  compose,\\n  lazy,\\n  map,\\n  mount,\\n  redirect,\\n  resolve,\\n  route,\\n  withContext,\\n  withView,\\n} from 'navi'\\nimport React from 'react'\\nimport { join } from 'path'\\nimport { chunk, fromPairs } from 'lodash'\\nimport BlogIndexPage from '../components/BlogIndexPage'\\nimport BlogLayout from '../components/BlogLayout'\\nimport BlogPostLayout from '../components/BlogPostLayout'\\nimport siteMetadata from '../siteMetadata'\\nimport posts from './posts'\\n\\n// Split the posts into a list of chunks of the given size, and\\n// then build index pages for each chunk.\\nlet chunks = chunk(posts, siteMetadata.indexPageSize)\\nlet chunkPagePairs = chunks.map((chunk, i) => [\\n  '/' + (i + 1),\\n  map(async (req, context) => {\\n    // Don't load anything when just crawling\\n    if (req.method === 'HEAD') {\\n      return route()\\n    }\\n\\n    // Get metadata for all pages on this page\\n    let postRoutes = await Promise.all(\\n      chunk.map(async post => {\\n        let href = join(context.blogRoot, 'posts', post.slug)\\n        return await resolve({\\n          // If you want to show the page content on the index page, set\\n          // this to 'GET' to be able to access it.\\n          method: 'HEAD',\\n          routes,\\n          url: href,\\n        })\\n      }),\\n    )\\n\\n    // Only add a page number to the page title after the first index page.\\n    let pageTitle = siteMetadata.title\\n    if (i > 0) {\\n      pageTitle += ` – page ${i + 1}`\\n    }\\n\\n    return route({\\n      title: pageTitle,\\n      view: (\\n        <BlogIndexPage\\n          blogRoot={context.blogRoot}\\n          pageNumber={i + 1}\\n          pageCount={chunks.length}\\n          postRoutes={postRoutes}\\n        />\\n      ),\\n    })\\n  }),\\n])\\n\\nconst routes = compose(\\n  withContext((req, context) => ({\\n    ...context,\\n    blogRoot: req.mountpath || '/',\\n  })),\\n  withView((req, context) => {\\n    // Check if the current page is an index page by comparing the remaining\\n    // portion of the URL's pathname with the index page paths.\\n    let isViewingIndex = req.path === '/' || /^\\\\/page\\\\/\\\\d+$/.test(req.path)\\n\\n    // Render the application-wide layout\\n    return (\\n      <BlogLayout blogRoot={context.blogRoot} isViewingIndex={isViewingIndex} />\\n    )\\n  }),\\n  mount({\\n    // The blog's index pages go here. The first index page is mapped to the\\n    // root URL, with a redirect from \\\"/page/1\\\". Subsequent index pages are\\n    // mapped to \\\"/page/n\\\".\\n    '/': chunkPagePairs.shift()[1],\\n    '/page': mount({\\n      '/1': redirect((req, context) => context.blogRoot),\\n      ...fromPairs(chunkPagePairs),\\n    }),\\n\\n    // Put posts under \\\"/posts\\\", so that they can be wrapped with a\\n    // \\\"<BlogPostLayout />\\\" that configures MDX and adds a post-specific layout.\\n    '/posts': compose(\\n      withView((req, context) => (\\n        <BlogPostLayout blogRoot={context.blogRoot} />\\n      )),\\n      mount(fromPairs(posts.map(post => ['/' + post.slug, post.getPage]))),\\n    ),\\n\\n    // Miscellaneous pages can be added directly to the root switch.\\n    '/tags': lazy(() => import('./tags')),\\n    '/about': lazy(() => import('./about')),\\n\\n    // Only the statically built copy of the RSS feed is intended to be opened,\\n    // but the route is defined here so that the static renderer will pick it\\n    // up.\\n    '/rss': route(),\\n  }),\\n)\\n\\nexport default routes\\n\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"LoadingIndicator\\\":\\\"LoadingIndicator_LoadingIndicator__3KSl0\\\",\\\"active\\\":\\\"LoadingIndicator_active__3EncM\\\",\\\"LoadingIndicator-animation\\\":\\\"LoadingIndicator_LoadingIndicator-animation__2icwd\\\"};\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"container\\\":\\\"BlogLayout_container__1fiRb\\\",\\\"title\\\":\\\"BlogLayout_title__3HyDU\\\"};\",\"import React from 'react'\\nimport { Link } from 'react-navi'\\nimport ArticleMeta from './ArticleMeta'\\nimport styles from './ArticleSummary.module.css'\\n\\nfunction ArticleSummary({ blogRoot, route }) {\\n  return (\\n    <article className={styles.ArticleSummary}>\\n      <h2><Link href={route.url.href}>{route.title}</Link></h2>\\n      <ArticleMeta blogRoot={blogRoot} meta={route.data} />\\n      <p>{route.data.spoiler}</p>\\n    </article>\\n  )\\n}\\n\\nexport default ArticleSummary\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"ArticleSummary\\\":\\\"ArticleSummary_ArticleSummary__3I5Qk\\\"};\",\"// extracted by mini-css-extract-plugin\\nmodule.exports = {\\\"Bio\\\":\\\"Bio_Bio__1ks_2\\\"};\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import register from \\\"navi-scripts/register\\\";\\nimport { createBrowserNavigation } from \\\"navi\\\";\\nimport React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\nimport { Router } from \\\"react-navi\\\";\\nimport HelmetProvider from \\\"react-navi-helmet-async\\\";\\nimport \\\"./index.module.css\\\";\\nimport routes from \\\"./routes\\\";\\nimport * as serviceWorker from \\\"./serviceWorker\\\";\\n\\n// `register()` is responsible for exporting your app's pages and App\\n// component to the static renderer, and for starting the app with the\\n// `main()` function when running within a browser.\\nregister({\\n  // Specify the pages that navi-app should statically build, by passing in a\\n  // Switch object.\\n  routes,\\n\\n  // This will only be called when loading your app in the browser. It won't\\n  // be called when performing static generation.\\n  async main() {\\n    let navigation = createBrowserNavigation({ routes });\\n\\n    // Wait until the navigation has loaded the page's content, or failed to do\\n    // so. If you want to load other data in parallel while the initial page is\\n    // loading, make sure to start loading before this line.\\n    await navigation.getRoute();\\n\\n    // React requires that you call `ReactDOM.hydrate` if there is statically\\n    // rendered content in the root element, but prefers us to call\\n    // `ReactDOM.render` when it is empty.\\n    let hasStaticContent = process.env.NODE_ENV === \\\"production\\\";\\n    let renderer = hasStaticContent ? ReactDOM.hydrate : ReactDOM.render;\\n\\n    // Start react, passing in the current navigation state and\\n    // rendering the top-level view.\\n    renderer(\\n      <HelmetProvider>\\n        <Router navigation={navigation} />\\n      </HelmetProvider>,\\n      document.getElementById(\\\"root\\\")\\n    )\\n\\n    // If you want your app to work offline and load faster, you can change\\n    // unregister() to register() below. Note this comes with some pitfalls.\\n    // Learn more about service workers: http://bit.ly/CRA-PWA\\n    serviceWorker.unregister();\\n  }\\n});\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,function(e,t,a){e.exports={title:\"BlogPostLayout_title__2L_2_\",header:\"BlogPostLayout_header__1Ny4T\",footer:\"BlogPostLayout_footer__3ofxa\",bio:\"BlogPostLayout_bio__diNn9\",links:\"BlogPostLayout_links__-LX2X\",next:\"BlogPostLayout_next__KrMHx\",content:\"BlogPostLayout_content__1mzTO\"}},,,,function(e,t,a){e.exports={Pagination:\"Pagination_Pagination__2Xt2h\",previous:\"Pagination_previous__1akUm\",next:\"Pagination_next__7Ba4Y\"}},,function(e,t,a){\"use strict\";var n=a(6),r=a(0),o=a.n(r),c=a(3);let l=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var i=a(12),s=a.n(i);t.a=function({blogRoot:e,meta:t,readingTime:a}){let r;if(a){let e=Math.max(Math.round(a.minutes),1),t=Math.round(e/5);r=o.a.createElement(o.a.Fragment,null,\" \",\"\\u2022\",\" \",o.a.createElement(\"span\",{className:s.a.readingTime},new Array(t||1).fill(\"\\u2615\\ufe0f\").join(\"\"),\" \",e,\" min read\"))}return o.a.createElement(\"small\",{className:s.a.ArticleMeta},o.a.createElement(\"time\",{dateTime:t.date.toUTCString()},function(e){let t=new Date(e),a=l[t.getMonth()],n=t.getDate(),r=t.getFullYear();return\"\".concat(a,\" \").concat(n,\", \").concat(r)}(t.date)),t.tags&&t.tags.length&&o.a.createElement(o.a.Fragment,null,\" \",\"\\u2022\",\" \",o.a.createElement(\"ul\",{className:s.a.tags},t.tags.map(t=>o.a.createElement(\"li\",{key:t},o.a.createElement(c.Link,{href:Object(n.join)(e,\"tags\",t)},t))))),r||null)}},function(e,t,a){e.exports={tags:\"ArticleMeta_tags__1IJ9w\"}},function(e,t,a){e.exports={title:\"BlogIndexPage_title__341hM\",articlesList:\"BlogIndexPage_articlesList__1V39R\",footer:\"BlogIndexPage_footer__1vkZQ\"}},,function(e,t,a){\"use strict\";var n=a(8),r=a(4),o=a.n(r),c=a(7),l=a(1),i=a(0),s=a.n(i),u=a(6),m=a(10),g=a(3),p={title:\"npx create-react-blog\",author:\"James K Nelson\",description:\"A clone of Dan Abramov's overreacted.io using create-react-app-mdx and Navi\",indexPageSize:10},b=a(22),d=a(27),f=a.n(d),h=a(28),E=a.n(h);var _=function(e){let t=function({email:e,size:t,defaultURL:a=\"identicon\"}){let n=E()(e.toLowerCase().trim());return\"https://www.gravatar.com/avatar/\".concat(n,\".jpg?s=\").concat(t,\"&d=\").concat(encodeURIComponent(a))}({email:\"test1@example.com\",size:56});return s.a.createElement(\"div\",{className:\"\\n      \".concat(f.a.Bio,\"\\n      \").concat(e.className||\"\",\"\\n    \")},s.a.createElement(\"img\",{src:t,alt:\"Me\"}),s.a.createElement(\"p\",null,\"Create a blog with a single command, by\",\" \",s.a.createElement(\"a\",{href:\"https://twitter.com/james_k_nelson/\"},\"James K Nelson\"),\".\",s.a.createElement(\"br\",null),\"Themed after Gatsby's blog starter and Dan Abramov's\",\" \",s.a.createElement(\"a\",{href:\"https://overreacted.io/\"},\"overreacted.io\"),\".\",s.a.createElement(\"br\",null),\"Based on\",\" \",s.a.createElement(\"a\",{href:\"https://facebook.github.io/create-react-app/\"},\"create-react-app\"),\", \",s.a.createElement(\"a\",{href:\"https://mdxjs.com/\"},\"MDX\"),\", and\",\" \",s.a.createElement(\"a\",{href:\"https://frontarm.com/navi/\"},\"Navi\"),\".\"))},v=a(9),j=a.n(v);var x=function({blogRoot:e,pageCount:t,pageNumber:a}){return s.a.createElement(\"small\",{className:j.a.Pagination},1!==a&&s.a.createElement(g.Link,{className:j.a.previous,href:Object(u.join)(e,\"page\",String(a-1))},\"\\u2190 Previous\"),s.a.createElement(\"span\",{className:j.a.pages},\" \",\"Page \",s.a.createElement(\"span\",{className:j.a.current},a),\"/\",s.a.createElement(\"span\",{className:j.a.count},t),\" \"),a<t&&s.a.createElement(g.Link,{className:j.a.next,href:Object(u.join)(e,\"page\",String(a+1))},\"Next \\u2192\"))},O=a(13),N=a.n(O);var w=function({blogRoot:e,pageCount:t,pageNumber:a,postRoutes:n}){return s.a.createElement(\"div\",null,s.a.createElement(\"header\",null,s.a.createElement(\"h1\",{className:N.a.title},s.a.createElement(g.Link,{href:e},p.title)),s.a.createElement(_,null)),s.a.createElement(\"ul\",{className:N.a.articlesList},n.map(t=>s.a.createElement(\"li\",{key:t.url.href},s.a.createElement(b.a,{blogRoot:e,route:t})))),t>1&&s.a.createElement(x,{blogRoot:e,pageCount:t,pageNumber:a}),s.a.createElement(\"footer\",{className:N.a.footer},s.a.createElement(\"div\",null,s.a.createElement(\"a\",{href:\"/rss.xml\",target:\"_blank\",style:{float:\"right\"}},\"RSS\"),s.a.createElement(g.Link,{href:\"/about\"},\"About\"),\" \\u2022 \",s.a.createElement(g.Link,{href:\"/tags\"},\"Tags\"),\" \",\"\\u2022\",\" \",s.a.createElement(\"a\",{href:\"https://github.com/frontarm/create-react-blog\"},\"Source\"))))},k=a(29),L=a.n(k);var y=function(){return s.a.createElement(\"div\",{className:L.a.NotFound},s.a.createElement(\"h1\",null,\"404 - Not Found\"))},R=a(18),P=a.n(R);var B=function({active:e,className:t,style:a}){return s.a.createElement(\"div\",{className:\"\\n        \".concat(P.a.LoadingIndicator,\"\\n        \").concat(e?P.a.active:\"\",\"\\n        \").concat(t,\"\\n      \"),style:a})},D=a(19),I=a.n(D);var A=function({blogRoot:e,isViewingIndex:t}){let a=Object(g.useLoadingRoute)();return s.a.createElement(\"div\",{className:I.a.container},s.a.createElement(B,{active:!!a}),!t&&s.a.createElement(\"header\",null,s.a.createElement(\"h3\",{className:I.a.title},s.a.createElement(g.Link,{href:e},p.title))),s.a.createElement(\"main\",null,s.a.createElement(g.NotFoundBoundary,{render:()=>s.a.createElement(y,null)},s.a.createElement(g.View,null))))},M=a(20),S=a(11),C=a(5),T=a.n(C);var F=function({blogRoot:e}){let t=Object(g.useCurrentRoute)(),a=t.title,n=t.data,r=t.url,o=Object(g.useView)(),c=o.connect,l=o.content,i=o.head,u=l.MDXComponent,m=l.readingTime;return c(s.a.createElement(s.a.Fragment,null,i,s.a.createElement(\"article\",{className:T.a.container},s.a.createElement(\"header\",{className:T.a.header},s.a.createElement(\"h1\",{className:T.a.title},s.a.createElement(g.Link,{href:r.pathname},a)),s.a.createElement(S.a,{blogRoot:e,meta:n,readingTime:m})),s.a.createElement(M.a,{components:{a:g.Link,wrapper:({children:e})=>s.a.createElement(\"div\",{className:T.a.content},e)}},s.a.createElement(u,null)),s.a.createElement(\"footer\",{className:T.a.footer},s.a.createElement(\"h3\",{className:T.a.title},s.a.createElement(g.Link,{href:e},p.title)),s.a.createElement(_,{className:T.a.bio}),s.a.createElement(\"section\",{className:T.a.links},n.previousDetails&&s.a.createElement(g.Link,{className:T.a.previous,href:n.previousDetails.href},\"\\u2190 \",n.previousDetails.title),n.nextDetails&&s.a.createElement(g.Link,{className:T.a.next,href:n.nextDetails.href},n.nextDetails.title,\" \\u2192\"))))))},J=a(14),$=a(30),V=a.n($);const X={\"./2019-01-05-welcome/post.js\":function(){return a.e(7).then(a.bind(null,55))}},z=e=>X[e](),U=Object.keys(X),H=/^((\\d{1,4})-(\\d{1,4})-(\\d{1,4}))[\\/-]/;let K=U.map(e=>{let t,a=V()(e.replace(/post.jsx?$/,\"\").replace(/(\\d)\\/(\\d)/,\"$1-$2\")).replace(/^[-.]+|[.-]+$/g,\"\").replace(H,\"$1/\"),n=a.match(H);return n&&(t=new Date(n[2],parseInt(n[3])-1,n[4])),{slug:a,pathname:e,date:t}});var Q=(K=Object(m.sortBy)(K,[\"slug\"]).reverse()).map(({slug:e,pathname:t,date:a},r)=>({getPage:l.h(Object(c.a)(o.a.mark(function i(){var s,m,g,p,b,d,f,h,E,_,v;return o.a.wrap(function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,z(t);case 2:if(s=i.sent,m=s.default,g=m.title,p=m.getContent,b=Object(J.a)(m,[\"title\",\"getContent\"]),0===r){i.next=11;break}return _=K[r-1],i.next=9,z(_.pathname);case 9:f=i.sent.default,d=_.slug;case 11:if(!(r+1<K.length)){i.next=17;break}return v=K[r+1],i.next=15,z(v.pathname);case 15:E=i.sent.default,h=v.slug;case 17:return i.abrupt(\"return\",l.m({title:g,getData:(r,o)=>Object(n.a)({date:a,pathname:t,slug:e,previousDetails:f&&{title:f.title,href:Object(u.join)(o.blogRoot,\"posts\",d)},nextDetails:E&&{title:E.title,href:Object(u.join)(o.blogRoot,\"posts\",h)}},b),getView:function(){var e=Object(c.a)(o.a.mark(function e(){var t,a,r;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,p();case 2:return t=e.sent,a=t.default,r=Object(J.a)(t,[\"default\"]),e.abrupt(\"return\",Object(n.a)({MDXComponent:a},r));case 6:case\"end\":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}()}));case 18:case\"end\":return i.stop()}},i)}))),slug:e}));let W=Object(m.chunk)(Q,p.indexPageSize),Y=W.map((e,t)=>[\"/\"+(t+1),Object(l.h)(function(){var a=Object(c.a)(o.a.mark(function a(n,r){var i,m;return o.a.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:if(\"HEAD\"!==n.method){a.next=2;break}return a.abrupt(\"return\",Object(l.m)());case 2:return a.next=4,Promise.all(e.map(function(){var e=Object(c.a)(o.a.mark(function e(t){var a;return o.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return a=Object(u.join)(r.blogRoot,\"posts\",t.slug),e.next=3,Object(l.l)({method:\"HEAD\",routes:G,url:a});case 3:return e.abrupt(\"return\",e.sent);case 4:case\"end\":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}()));case 4:return i=a.sent,m=p.title,t>0&&(m+=\" \\u2013 page \".concat(t+1)),a.abrupt(\"return\",Object(l.m)({title:m,view:s.a.createElement(w,{blogRoot:r.blogRoot,pageNumber:t+1,pageCount:W.length,postRoutes:i})}));case 8:case\"end\":return a.stop()}},a)}));return function(e,t){return a.apply(this,arguments)}}())]);const G=Object(l.b)(Object(l.n)((e,t)=>Object(n.a)(Object(n.a)({},t),{},{blogRoot:e.mountpath||\"/\"})),Object(l.p)((e,t)=>{let a=\"/\"===e.path||/^\\/page\\/\\d+$/.test(e.path);return s.a.createElement(A,{blogRoot:t.blogRoot,isViewingIndex:a})}),Object(l.j)({\"/\":Y.shift()[1],\"/page\":Object(l.j)(Object(n.a)({\"/1\":Object(l.k)((e,t)=>t.blogRoot)},Object(m.fromPairs)(Y))),\"/posts\":Object(l.b)(Object(l.p)((e,t)=>s.a.createElement(F,{blogRoot:t.blogRoot})),Object(l.j)(Object(m.fromPairs)(Q.map(e=>[\"/\"+e.slug,e.getPage])))),\"/tags\":Object(l.g)(()=>a.e(3).then(a.bind(null,56))),\"/about\":Object(l.g)(()=>a.e(6).then(a.bind(null,54))),\"/rss\":Object(l.m)()}));t.a=G},,,function(e,t,a){e.exports={LoadingIndicator:\"LoadingIndicator_LoadingIndicator__3KSl0\",active:\"LoadingIndicator_active__3EncM\",\"LoadingIndicator-animation\":\"LoadingIndicator_LoadingIndicator-animation__2icwd\"}},function(e,t,a){e.exports={container:\"BlogLayout_container__1fiRb\",title:\"BlogLayout_title__3HyDU\"}},,,function(e,t,a){\"use strict\";var n=a(0),r=a.n(n),o=a(3),c=a(11),l=a(26),i=a.n(l);t.a=function({blogRoot:e,route:t}){return r.a.createElement(\"article\",{className:i.a.ArticleSummary},r.a.createElement(\"h2\",null,r.a.createElement(o.Link,{href:t.url.href},t.title)),r.a.createElement(c.a,{blogRoot:e,meta:t.data}),r.a.createElement(\"p\",null,t.data.spoiler))}},,,,function(e,t,a){e.exports={ArticleSummary:\"ArticleSummary_ArticleSummary__3I5Qk\"}},function(e,t,a){e.exports={Bio:\"Bio_Bio__1ks_2\"}},,function(e,t,a){},,,function(e,t,a){e.exports=a(44)},,,,,,,,function(e,t,a){},,,,function(e,t,a){\"use strict\";a.r(t);var n=a(4),r=a.n(n),o=a(7),c=a(23),l=a(1),i=a(0),s=a.n(i),u=a(16),m=a.n(u),g=a(3),p=a(31),b=(a(40),a(15));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));Object(c.a)({routes:b.a,main:()=>Object(o.a)(r.a.mark(function e(){var t;return r.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=Object(l.d)({routes:b.a}),e.next=3,t.getRoute();case 3:!0,(0,m.a.hydrate)(s.a.createElement(p.a,null,s.a.createElement(g.Router,{navigation:t})),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(e=>{e.unregister()});case 7:case\"end\":return e.stop()}},e)}))()})}],[[32,1,2]]]);","extractedComments":[]}